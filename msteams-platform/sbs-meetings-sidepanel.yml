### YamlMime:Tutorial
title: Generate meeting side panel
metadata:
  title: Meeting Side Panel
  description: With this learning module, learn how to generate meetings side panel to add and publish agenda for Teams.
  audience: Developer
  level: Beginner
  ms.date: 12/06/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/build-tabs-for-meeting.md
  nextTutorialTitle: Read more to enable and configure apps for meetings
  ms.custom: mvc
  ms.localizationpriority: high
items:
- durationInMinutes: 1
  content: |
    The meeting side panel enhances your in-meeting experience and helps organizers and presenters to have different sets of views and actions.

    Key features of the meeting side panel are:

    * Provisions to add a new agenda point.
    * Adds the agenda as text input to the side panel list.
    * Publishes the agenda list to the meeting chat.
    
    This step-by-step guide helps you to generate meeting side panel to add and publish an agenda. You'll see the following output:

       :::image type="content" source="assets/images/meetings-side-panel/sidepanelondesktopmobile_1.png" alt-text="Screenshot shows the final meeting side panel output.":::

- title: Prerequisites
  durationInMinutes: 1
  content: |
    Ensure that you install the following tools and set up your development environment:  

     | &nbsp; | Install | For using... |
     | --- | --- | --- |
     | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams to collaborate with everyone you work with through apps for chat, meetings, and calls all-in-one place.|
     | &nbsp; | [Visual Studio 2022](https://visualstudio.microsoft.com) | You can install the enterprise version in Visual Studio 2022, and install the ASP.NET and web development workloads. Use the latest version. |
     | &nbsp; | [.NET Core SDK](https://dotnet.microsoft.com/en-us/download) | Customized bindings for local debugging and Azure Functions app deployments. If you haven't installed the latest version, install the portable version. |
     | &nbsp; | [Node.js and npm](https://nodejs.org/) | Back-end JavaScript runtime environment. For more information, see [Node.js version compatibility table for project type](~/toolkit/build-environments.md#nodejs-version-compatibility-table-for-project-type).|
     | &nbsp; | [Latest version of Microsoft Teams JavaScript client library (TeamsJS)](/javascript/api/overview/msteams-client) | You can install the package using npm or yarn. |
     | &nbsp; | Dev tunnel | Teams app features (conversational bots, message extensions, and incoming webhooks) need inbound connections. A tunnel connects your development system to Teams. Dev tunnel is a powerful tool to securely open your localhost to the internet and control who has access. Dev tunnel is available in Visual Studio 2022 version 17.7.0 or later. <br> or </br> You can also use [ngrok](https://ngrok.com/download) as a tunnel to connect your development system to Teams. It isn't required for apps that only include tabs. This package is installed within the project directory (using npm `devDependencies`). |
     | &nbsp; | [SignalR](/aspnet/signalr/overview/getting-started/tutorial-getting-started-with-signalr-and-mvc) | Install to update agenda in real-time. |
    
     
      > [!NOTE]
      > After downloading ngrok, sign up and install [authtoken](https://ngrok.com/download).

- title: Set up local environment
  durationInMinutes: 1
  content: | 

   1. Open [Microsoft Teams Samples](https://github.com/OfficeDev/Microsoft-Teams-Samples).
   1. Select **Code**.
   1. From the dropdown menu, select **Open with GitHub Desktop**.

      :::image type="content" source="./assets/images/meetings-side-panel/clonerepository_1.png" alt-text= "Screenshot shows a GitHub web page. The option titled open with GitHub desktop under code dropdown menu is highlighted in red.":::

   1. Select **Clone**. 
           
      > [!NOTE]
      > If you encounter the error "Filename too long," apply the git command `git config --system core.longpaths true` in your administrator terminal of choice.

- title: Create and register your bot
  durationInMinutes: 5
  content: |
    To create and register your bot in Microsoft Entra ID, perform the following steps:

    * Create Azure Bot resource to register bot with Azure Bot service.
    * Create client secret to enable single sign-on (SSO) authentication of the bot.
    * Add Teams channel to deploy the bot.
    * Create a ngrok tunnel to your web server's endpoints.
    * Add messaging endpoint to the ngrok tunnel you created.

    **To create Azure bot resource**

    1. Go to the [Azure portal](https://portal.azure.com/).
    1. Select **Create a resource**.

       :::image type="content" source="./assets/images/meetings-side-panel/create-resource-azure-portal.png" alt-text="Screenshot shows the create a resource option in the Azure portal.":::
    
    1. Search for **Azure Bot** in the search box.
    1. Select **Azure Bot**.
    1. Select **Create**.

       :::image type="content" source="./assets/images/meetings-side-panel/create-azure-bot.png" alt-text="Screenshot shows the Azure bot create page with the create option highlighted in red.":::

    1. In the **Create an Azure Bot** window that appears, enter the required bot handle name in **Bot handle**.
    1. Select your **Subscription** and **Resource group** from the dropdown list.
       
       :::image type="content" source="./assets/images/conversation-bot/create-azure-bot.png" alt-text="Screenshot shows the create an Azure bot with the resource group option highlighted in red.":::
    
       You can optionally create a new resource group. Select **Create new** > enter resource name > select **OK**. Select required location from **New resource group location** dropdown list.

       :::image type="content" source="~/assets/images/meetings-side-panel/newresource.png" alt-text="Screenshot shows the new resource group location.":::

    1. In the **Microsoft App ID** section, select **Type of App** as **Multi Tenant**.
    1. In the **Creation Type**, by default **Create new Microsoft App ID** is selected. You can optionally select **Use existing app registration** and enter **App ID**, **App tenant ID**, and **MSI resource ID**.

       > [!NOTE]
       > You can't create more than one bot with the same **Microsoft App ID**.

    1. Select **Review + create**.

       :::image type="content" source="./assets/images/meetings-side-panel/tenant-review.png" alt-text="Screenshot shows the Microsoft app ID section under create an Azure bot. The type of app selected and review plus create options are highlighted in red.":::

    1. If the validation is passed, select **Create**.

        It takes a few moments for your bot service to be provisioned. 

       :::image type="content" source="./assets/images/conversation-bot/validation-passed.png" alt-text="Screenshot shows the deployment complete with the go to resource option highlighted in red.":::       

    1. Select **Go to resource**. 

       :::image type="content" source="./assets/images/meetings-side-panel/go-to-resource.png" alt-text="Screenshot shows the deployment complete with the go to resource option highlighted in red.":::

        Your Azure bot is created and you can see the **Resource group** and **Subscription ID** in the Azure Bot.

        :::image type="content" source="./assets/images/meetings-side-panel/app-overview.png" alt-text="Screenshot shows the Azure bot home page that is created.":::

    **To create client secret**

      Perform the following steps if you've created a new **Microsoft App ID**:

    1. In the left pane, select **Configuration**. 

       > [!TIP]
       > Save the **Microsoft App ID** or **Client ID** for future reference.

    1. Next to **Microsoft App ID**, select **Manage Password**.

       :::image type="content" source="~/assets/images/manage-password-bot-label.png" alt-text="Screenshot shows the Microsoft app ID option under configuration page with the manage option highlighted in red.":::

    1. In the **Client secrets** section, select **+ New client secret**. 

       :::image type="content" source="~/assets/images/meetings-side-panel/newclientsecret_2.png" alt-text="Screenshot shows the client secrets section with new client secret highlighted in red.":::
    
    1. In the **Add a client secret** window that appears, enter **Description** of the client secret and select **Add**.
    
         :::image type="content" source="~/assets/images/meetings-side-panel/clientsecret_1.png" alt-text="Screenshot shows the add a client secret window with the add option highlighted in red.":::

    1. Select **Copy to clipboard** to copy the **Value** details.

         :::image type="content" source="~/assets/images/meetings-side-panel/clientvalue.png" alt-text="Screenshot shows the client secrets section with the copy to clipboard icon highlighted in red.":::
       
       > [!TIP]
       > Save the **Client secrets** value or app password for future reference.

    **To add the Teams channel**

    1. Go to **Home**.

       :::image type="content" source="~/assets/images/meetings-side-panel/gotohome_1.png" alt-text="Screenshot shows the Azure bot home page with the home option highlighted in red.":::

    1. Select your bot from **Recent resources**.

    1. Select **Channels** in the left pane 

    1. Select **Microsoft Teams** <img src="~/assets/images/bots/teamsicon.png" alt="Teams icon" width="20"/>.

       :::image type="content" source="./assets/images/meetings-side-panel/channel-teams_1.png" alt-text="Screenshot shows the Azure bot home page. The channels option in the left pane and Microsoft Teams under channels are highlighted in red.":::

    1. Select the checkbox to accept the **Terms of Service**.
    
    1. Select **Agree**.

       :::image type="content" source="~/assets/images/meetings-side-panel/terms_2.png" alt-text="Screenshot shows the terms of service page with the agree option highlighted in red.":::

    1. Select **Apply**.

       :::image type="content" source="../msteams-platform/assets/images/teams-file-upload-bot/apply-teams_1.png" alt-text="Screenshot shows the Microsoft Teams messaging channel with the apply option highlighted in red.":::
    
    **To create tunnel for local web server**

    Use ngrok to create a tunnel to your locally running web server's publicly available HTTPS endpoints. Run the following command in ngrok:

     ```bash
     ngrok http --host-header=localhost 3001
     ```

    > [!TIP]
    > If you encounter **ERR_NGROK_4018**, follow the steps provided in the Command Prompt to sign up and authenticate ngrok. Then run the `ngrok http --host-header=localhost 3001` command.

    **To add messaging endpoint**

    1. From ngrok, copy the HTTPS URL.

       :::image type="content" source="../msteams-platform/assets/images/meetings-side-panel/ngrok-url_1.png" alt-text="Screenshot shows ngrok with the ngrok HTTPS URL highlighted in red.":::

        > [!NOTE]
        > The HTTPS URL in your ngrok is your domain name that doesn't include `https://`.

    1. In **Settings**, select **Configuration**.

    1. In **Messaging endpoint**, add the HTTPS URL from ngrok and at the end of the URL add /api/messages.

       :::image type="content" source="~/assets/images/meetings-side-panel/messaging-endpoint_1.png" alt-text="Screenshot shows the Azure bot configuration page. The messaging endpoint with the ngork URL is highlighted in red.":::

    1. Select **Apply**.

        You have successfully set up a bot in Azure Bot service.

- title: Update the Microsoft Entra app registration
  durationInMinutes: 1
  content: |

    1. Go to the [Azure portal](https://portal.azure.com/).

    1. Select **Microsoft Entra ID**.

       :::image type="content" source="~/assets/images/meetings-side-panel/AAD.png" alt-text="Screenshot shows the Azure services with Microsoft Entra ID highlighted in red.":::

    1. In the left navigation pane, select **App registrations**.

       :::image type="content" source="~/assets/images/sbs-graphactivity-feedbroadcast/select-app-registration-screen.png" alt-text="Screenshot shows app registrations under the Microsoft Entra ID overview." border="true":::    

    1. Select your bot.

       :::image type="content" source="~/assets/images/meetings-side-panel/appregister_2.png" alt-text="Screenshot shows the Microsoft Entra ID page. The app registrations in the left panel and the bot selected are highlighted in red.":::

    1. Under **Manage**, select **Expose an API**.

    1. Select **Add**.

       :::image type="content" source="~/assets/images/meetings-side-panel/expose-an-api.png" alt-text="Screenshot shows the expose an API with the set option highlighted in red.":::

    1. Set the **Application ID URI** in the form of `api://your ngrok/botid-{AppID}`.

       :::image type="content" source="~/assets/images/meetings-side-panel/set-link.png" alt-text="Screenshot shows the expose an API with the application ID highlighted in red.":::
        
       The following image shows the domain name:
        
       :::image type="content" source="~/assets/images/meetings-side-panel/appI-Duri.png" alt-text="Screenshot shows the expose an API with the domain name highlighted in red.":::

        > [!NOTE]
        > If you're using a tunneling service such as ngrok, ensure you update the value whenever your ngrok subdomain changes.
        > For example: `api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, where `f631****.ngrok.io` is the new ngrok subdomain name.

    1. Select **Add a scope**. 

       :::image type="content" source="../msteams-platform/assets/images/meetings-side-panel/select-scope.png" alt-text="Screenshot shows the scopes defined by the API section with the add a scope option highlighted in red.":::
    
    1.  In the panel that appears, enter **access_as_user** as the **Scope name**.
  
    1. Set **Who can consent?** to **Admins and users**.
  
    1. To configure the admin and user consent prompts with appropriate values for **access_as_user** scope, provide the following information in the fields:</br>
    
         * Enter **Teams can access the user’s profile** as **Admin consent display name**.

         * Enter **Allows Teams to call the app’s web APIs as the current user** as **Admin consent description**.

         * Enter **Teams can access the user profile and make requests on the user’s behalf** as **User consent display name**.

         * Enter **Enable Teams to call this app’s APIs with the same rights as the user** as **User consent description**.
  
      The following image shows the fields and the values:

       :::image type="content" source="~/assets/images/meetings-side-panel/add-a-scope.png" alt-text="Screenshot shows the add a scope window with add scope highlighted in red.":::

    1. Ensure that "State" is set to "Enabled".

       :::image type="content" source="../msteams-platform/assets/images/meetings-side-panel/sbs-enabled.png" alt-text="Screenshot shows the scopes defined by the API section with the add a scope option highlighted in red.":::

    1. Select "Add scope" to save.

        > [!NOTE]
        > The **Scope name** should match with the **Application ID** URI with `/access_as_user` appended at the end.</br>
           `api://*******.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`

        :::image type="content" source="~/assets/images/meetings-side-panel/scopes_1.png" alt-text="Screenshot shows the scopes defined by the API section with the scope highlighted in red.":::
  
    1. In the **Authorized client applications** section, identify the applications that you want to authorize for your app’s web application. 
    
    1. Select **Add a client application**. 

       :::image type="content" source="~/assets/images/meetings-side-panel/selectclientapp.png" alt-text="Screenshot shows the authorized client applications section with add a client application highlighted in red.":::

    1. Enter each of the following client IDs:

       * Enter **Client ID**: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` for Teams mobile or desktop application. 

         :::image type="content" source="~/assets/images/meetings-side-panel/addclientapplication1.png" alt-text="Screenshot shows the add a client application page with the client ID one highlighted in red."::: 

       * Enter **Client ID**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` for Teams web application.

         :::image type="content" source="~/assets/images/meetings-side-panel/addclientapplication2.png" alt-text="Screenshot shows the add a client application with the client ID two highlighted in red.":::

    1. Select **Authorized scopes**.

         :::image type="content" source="~/assets/images/meetings-side-panel/authorizedscope_1.png" alt-text="Screenshot shows the authorized scopes section under expose an API page with the scope highlighted in red":::

       The following image displays the client ID:

         :::image type="content" source="~/assets/images/meetings-side-panel/clientapps.png" alt-text="Screenshot shows the authorized client applications under expose an API with the client IDs highlighted in red."::: 
  
    1. In the left pane, select **API permissions**. 

       > [!NOTE]
       > Users need to consent to these permissions only if the Microsoft Entra app is registered in a different tenant.

    1. Select **Add a permission** > **Microsoft Graph**

        :::image type="content" source="~/assets/images/meetings-side-panel/addpermission-graph-api.png" alt-text="Screenshot shows the configured permissions with add a permission highlighted in red."::: 

    1. Select **Delegated permissions**.

    1. Add the following **API permissions**:</br>
         * **email**
         * **offline_access**
         * **openid**
         * **profile**
         * **User.Read**

    1. Select **Add permissions**.

        :::image type="content" source="~/assets/images/meetings-side-panel/other-permissions_1.png" alt-text="Screenshot shows the request API permissions with the add permissions highlighted in red after selecting the required permissions.":::

    1. From the left pane, select **Authentication**.

       > [!NOTE]
       > If an app isn't granted IT admin consent, users must provide consent the first time they use an app.
               
         1. Select **Add a platform** > **Web**.

            :::image type="content" source="~/assets/images/meetings-side-panel/webauth_platform.png" alt-text="Screenshot shows the authentication page with add a platform option followed by web option highlighted in red.":::

         1. Enter the redirect URI for your app by appending `auth-end` to domain name:</br> 
           `https://your ngrok/auth-end`. </br>

         1. Enable **Implicit grant and hybrid flows** by selecting the following checkboxes:
             * **ID tokens (used for implicit flows)**
             * **Access tokens (used for implicit and hybrid flows)**
   
         1. Select **Configure**.

             :::image type="content" source="~/assets/images/meetings-side-panel/authend_1.png" alt-text="Screenshot shows the configure web page with redirect URLs, token selections, and configure options highlighted in red.":::

- title: Set up app settings and manifest files
  durationInMinutes: 1
  content: |
    1. Go to **appsettings.json** file in the cloned repository.

          :::image type="content" source="~/assets/images/meetings-side-panel/appsettingslocation_1.png" alt-text="Screenshot shows the appsettings JSON file with appsettings information.":::

    1. Open **appsettings.json** file in Visual Studio and update the following information:  

         * Replace `"MicrosoftAppId"` to your bot's **Microsoft App ID**.
         * Replace `"MicrosoftAppPassword"` to your bot's client secret ID **Value**.
         * Replace `"BaseUrl"` to the ngrok domain name.

          :::image type="content" source="~/assets/images/meetings-side-panel/appsettings_1.png" alt-text="Screenshot shows the appsettings JSON file with appsettings highlighted in red.":::
          
    1. Go to **manifest.json** file in the cloned repository.

         :::image type="content" source="~/assets/images/meetings-side-panel/manifestlocation_1.png" alt-text="Screenshot shows the Teams app manifest folder with the file path and manifest file highlighted in red.":::
    
    1. Open **manifest.json** file in Visual Studio and make the following changes:

         * Replace all occurrences of `<<Your_Domain_URL>>` with your ngrok domain name.
         * Replace all occurrences of `<<Microsoft-App-ID>>` with your bot's **Microsoft App ID**.

         :::image type="content" source="~/assets/images/meetings-side-panel/manifest-2_1.png" alt-text="Screenshot shows the ID and bot ID highlighted in red.":::

- title: Build and run the service
  durationInMinutes: 1
  content: |
    To build and run the service use Visual Studio or Command line:

    # [Visual Studio](#tab/vs)

       1. Open **Visual Studio**.
       1. Go to **File** > **Open** > **Project/Solution..**.
    
           :::image type="content" source="~/assets/images/meetings-side-panel/open-project1.png" alt-text="Screenshot shows Visual Studio with the file, open, and project/solution highlighted in red.":::

       1. Select **SidePanel.csproj** file from **csharp** folder.

           :::image type="content" source="~/assets/images/meetings-side-panel/Tokenfileready_1.png" alt-text="Screenshot shows the cloned repository with the side panel project file highlighted in red.":::

       1. Press **F5** to run the project. You can run using Visual Studio or .NET in the appropriate folder.

       1. Navigate to `samples\meetings-sidepanel\csharp\ClientApp` **folder** and execute the command.

           ```bash
           npx @fluidframework/azure-local-service@latest
           ```
    
       1. Select **Yes** if the following dialog appears:

            :::image type="content" source="~/assets/images/meetings-side-panel/certificate.png" alt-text="Screenshot shows the security warning with the yes option highlighted in red.":::

          A webpage appears with a message, **Your bot is ready!**

           :::image type="content" source="~/assets/images/meetings-side-panel/appisready_1.png" alt-text="Screenshot shows the webpage that displays that your bot is ready."::: 
 
    # [Command line](#tab/cli)

    Go to **samples > meetings-sidepanel > csharp > Side Panel** in a Command Prompt window and enter the following command:

    ```bash
    dotnet run
    ```
    :::image type="content" source="~/assets/images/meetings-side-panel/dotnetruncmd.png" alt-text="Screenshot shows Command Prompt dotnet run with the dotnet run command."::: 
      
- title: Add meeting side panel to Teams
  durationInMinutes: 1
  content: |

    1. In your cloned repository, go to **csharp > SidePanel > Manifest**.

    1. Create a .zip file with the following files that are present in the **manifest** folder: 
       * manifest.json
       * outline.png
       * color.png

         :::image type="content" source="~/assets/images/meetings-side-panel/zipfile_1.png" alt-text="Screenshot shows the cloned repository with the created zip file highlighted in red."::: 
    
    1. Create a meeting with a few presenters and attendees.
   
    1. After the meeting is created, go to the meeting details page, and select the **Apps** icon to add an app.
 
    1. In the pop-up window, select **Manage apps**.

        :::image type="content" source="~/assets/images/meetings-side-panel/manageapps_1.png" alt-text="Screenshot shows the Teams side panel with the add apps icon and manage apps option highlighted in red."::: 
   
    1. Select **Upload an app**.

        :::image type="content" source="~/assets/images/meetings-side-panel/uploadcustomapp_1.png" alt-text="Screenshot shows a banner to build your own app with upload a custom app option highlighted in red."::: 

    1. Select **Open** to upload the .zip file that you created in the **Manifest** folder.

        :::image type="content" source="~/assets/images/meetings-side-panel/selectzip_1.png" alt-text="Screenshot shows the cloned repository with the created zip file and open option highlighted in red."::: 

    1. Select **Add**.

        :::image type="content" source="~/assets/images/meetings-side-panel/add-the-app.png" alt-text="Screenshot shows the side panel in Teams with the add option highlighted in red."::: 

       The **Manage apps** section displays the list of applications.
   
        :::image type="content" source="~/assets/images/meetings-side-panel/manageappsection_1.png" alt-text="Screenshot shows the manage apps displaying the list of applications."::: 
   
    1. Go to Teams meeting.
    
    1. Select **Apps**. 
    
       In the app selection page, the **Side Panel** app is displayed.

    1. Select the **Side Panel** app.
  
        :::image type="content" source="~/assets/images/meetings-side-panel/appicon-2.png" alt-text="Screenshot shows the side panel app highlighted in red."::: 

    1. Select **Save**.

        :::image type="content" source="~/assets/images/meetings-side-panel/welcomeapp_1.png" alt-text="Screenshot shows the side panel with save option highlighted in red."::: 
   
       The app is visible in the meeting side panel.         

- title: Interact with the app in Teams
  durationInMinutes: 1
  content: |
    Let's interact with the app in Teams!

    1. Select **Add New Agenda Item** to add a new agenda to the default agenda list.

        :::image type="content" source="~/assets/images/meetings-side-panel/sidepanelinmeet_1.png" alt-text="Screenshot shows the Teams meeting displaying the addition of new agenda highlighted in red."::: 

    1. Enter a new agenda item and select **Add**.

        :::image type="content" source="~/assets/images/meetings-side-panel/newagenda_1.png" alt-text="Screenshot shows the Teams meeting with add option highlighted in red."::: 

       The new agenda is added in the list.

    1. Select **Publish Agenda**.

         :::image type="content" source="~/assets/images/meetings-side-panel/youragenda_1.png" alt-text="Screenshot shows the Teams meeting with publish agenda highlighted in red."::: 

       The new agenda list is displayed in the meeting chat.

         :::image type="content" source="~/assets/images/meetings-side-panel/agendainchat_1.png" alt-text="Screenshot shows the Teams meeting with the new agenda list highlighted in red."::: 

- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with output like this?

       :::image type="content" source="~/assets/images/meetings-side-panel/sidepanelondesktopmobile_1.png" alt-text="Screenshot shows the meeting side panel output after successfully completing the step-by-step guide."::: 

- content: |
    You've completed the tutorial to get started with a **Side Panel** app!
